import 'package:day_night_switcher/day_night_switcher.dart';
import 'package:flutter/material.dart';


void main() {
  runApp(const DarkMode());
}
class DarkMode extends StatefulWidget {
  const DarkMode({Key? key}) : super(key: key);

  @override
  State<StatefulWidget> createState() => DarkModeState();
}
class DarkModeState extends State<DarkMode> {

  bool isDarkModeEnabled = false;


  @override
  Widget build(BuildContext context) {
    return
          MaterialApp(
            theme: ThemeData.light(),
            darkTheme: ThemeData.dark().copyWith(
              appBarTheme: AppBarTheme(color: const Color(0xFF253341)),
              scaffoldBackgroundColor: const Color(0xFF15202B),
            ),
            themeMode: isDarkModeEnabled ? ThemeMode.dark : ThemeMode.light,

            home: const Users(),
            debugShowCheckedModeBanner: false,

    );
  }
  void onStateChanged(bool isDarkModeEnabled) {
    setState(() {
      this.isDarkModeEnabled = isDarkModeEnabled;
    });
  }
}


class Users extends StatelessWidget{
  const Users({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context){

    return Scaffold(

      appBar: AppBar(
        title: const Text("Users"),
        centerTitle: true,
        actions: <Widget>[
          IconButton(
            icon: const Icon(Icons.settings),
            tooltip: 'Settings',
            onPressed: () {
              Navigator.push(context, MaterialPageRoute<void>(
                  builder: (context) =>  SettingsMenu()),

              );
            },
          ),
        ],
      ),

    );
  }


}


class SettingsMenu extends StatelessWidget{
   SettingsMenu({Key? key}) : super(key: key);

  bool isDarkModeEnabled = false;

  @override
  Widget build(BuildContext context){

    return
      Scaffold(

        appBar: AppBar(
          title: const Text("Settings"),
        ),

        body: Container(

          padding: const EdgeInsets.all(10.0),
child: Expanded(
          child:ListView(
            children:[

              Row(

                children:  [
                  const Text("Dark mode" , style: TextStyle(
                    color: Color(0xFF7E7E7E),
                    fontFamily: 'Source Sans Pro',
                    fontSize: 20.0,
                    fontWeight: FontWeight.bold,
                  ),
                  ),
                  const SizedBox(
                    width: 240.0,
                  ),

                  DayNightSwitcherIcon(
                    isDarkModeEnabled: isDarkModeEnabled,
                    onStateChanged: (isDarkModeEnabled) {
                      setState(() {
                        this.isDarkModeEnabled = isDarkModeEnabled;
                      });
                    },
                  ),

                ],
              ),
              const  Divider(height: 20, thickness:1),
              buildAccountOption(context, 'Change Language'),
            ],


          ),
),
        ),

      );

  }

}


GestureDetector buildAccountOption(BuildContext context, String title){
  return GestureDetector(
    onTap: (){
      showDialog(context: context, builder: (BuildContext context){
        return AlertDialog(
          title:
          Align(
            child: Center(
              child: Text(title),
            ),
          ),

          content: Row(
            children: [
              const SizedBox(width: 10),
              ButtonTheme(
                minWidth: 100.0,
                height: 50.0,
                child: ElevatedButton(
                  child:
                  const Text('English'),
                  onPressed: (){

                  },
                ),
              ),

              const SizedBox(
                  width:60.0
              ),
              ButtonTheme(
                minWidth: 200.0,
                height: 55.0,
                child: ElevatedButton(
                  child:
                  const Text('Arabic'),
                  onPressed: (){

                  },
                ),
              ),

            ],
          ),

        );
      });
    },
    child:  Padding(
      padding: const EdgeInsets.only(right: 15, top: 10),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(title, style: const TextStyle(
            fontSize:20,

            color: Color(0xFF7E7E7E),
            fontFamily: 'Source Sans Pro',
            fontWeight: FontWeight.bold,
          )),
          const Icon(Icons.arrow_forward_ios, color: Colors.grey),


        ],
      ),

    ),
  );
}
